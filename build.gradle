plugins {
    id 'java-library'
}

repositories {
    mavenCentral()
}

def junitVersion = "5.7.0"
def selenideVersion = "5.19.0"
def ownerVersion = "1.0.12"

dependencies {
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "com.codeborne:selenide:${selenideVersion}"
    testImplementation "org.aeonbits.owner:owner:${ownerVersion}"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}

tasks.withType(Test) {
    systemProperties += System.properties
    systemProperty("junit.jupiter.extensions.autodetection.enabled", "true")

    if (System.getProperty("threads") != null) {
        systemProperties += [
                'junit.jupiter.execution.parallel.enabled'                 : true,
                'junit.jupiter.execution.parallel.mode.default'            : 'concurrent',
                'junit.jupiter.execution.parallel.mode.classes.default'    : 'concurrent',
                'junit.jupiter.execution.parallel.config.strategy'         : 'fixed',
                'junit.jupiter.execution.parallel.config.fixed.parallelism': System.getProperty("threads").toInteger()
        ]
    }
}

task web(type: Test) {
    useJUnitPlatform {
        includeTags 'web'
    }
    systemProperty 'platform', 'web'
}